//
//  ViewController.swift
//  CameraML
//
//  Created by Kviatkovskii on 26.06.17.
//  Copyright Â© 2017 Kviatkovskii. All rights reserved.
//

import UIKit
import Photos
import SnapKit
import RxSwift

final class ViewController: UIViewController {

    let cameraController = CameraController()
    
    fileprivate let captureButton: UIButton = {
        let button = UIButton(frame: CGRect(x: 0.0, y: 0.0, width: 50.0, height: 50.0))
        button.backgroundColor = UIColor.white
        button.layer.borderColor = UIColor.black.cgColor
        button.layer.borderWidth = 1.0
        button.layer.cornerRadius = min(button.frame.width, button.frame.height) / 2
        return button
    }()
    
    ///Displays a preview of the video output generated by the device's cameras.
    fileprivate let capturePreviewView: UIView = {
        let view = UIView()
        view.backgroundColor = UIColor.red
        return view
    }()
    
    fileprivate let toggleCameraButton: UIButton = {
        let button = UIButton(frame: CGRect(x: 0.0, y: 0.0, width: 25.0, height: 25.0))
        button.setImage(#imageLiteral(resourceName: "ic_switch_camera"), for: .normal)
        button.backgroundColor = UIColor.white.withAlphaComponent(0.5)
        button.layer.borderColor = UIColor.black.cgColor
        button.layer.borderWidth = 1.0
        button.layer.cornerRadius = 5.0
        return button
    }()
    
    fileprivate lazy var toggleFlashButton: UIButton = {
        let button = UIButton(frame: CGRect(x: 0.0, y: 0.0, width: 25.0, height: 25.0))
        self.cameraController.flashMode = .off
        button.setImage(#imageLiteral(resourceName: "ic_flash_off"), for: .normal)
        button.backgroundColor = UIColor.white.withAlphaComponent(0.5)
        button.layer.borderColor = UIColor.black.cgColor
        button.layer.borderWidth = 1.0
        button.layer.cornerRadius = 5.0
        button.addTarget(self, action: #selector(toggleFlash(_:)), for: UIControlEvents.touchUpInside)
        return button
    }()
    
    override var prefersStatusBarHidden: Bool { return true }
    
    fileprivate func updateConstraints() {
        capturePreviewView.snp.makeConstraints { (make) in
            make.top.bottom.equalToSuperview()
            make.left.right.equalToSuperview()
        }
        
        captureButton.snp.makeConstraints { (make) in
            make.size.equalTo(CGSize(width: 50.0, height: 50.0))
            make.centerX.equalToSuperview()
            make.bottom.equalToSuperview().offset(-25.0)
        }
        
        toggleCameraButton.snp.makeConstraints { (make) in
            make.size.equalTo(CGSize(width: 25.0, height: 25.0))
            make.centerY.equalTo(captureButton)
            make.right.equalToSuperview().offset(-15.0)
        }
        
        toggleFlashButton.snp.makeConstraints { (make) in
            make.size.equalTo(CGSize(width: 25.0, height: 25.0))
            make.centerY.equalTo(captureButton)
            make.left.equalToSuperview().offset(15.0)
        }
        
        super.updateViewConstraints()
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.view.addSubview(capturePreviewView)
        capturePreviewView.addSubview(captureButton)
        capturePreviewView.addSubview(toggleCameraButton)
        capturePreviewView.addSubview(toggleFlashButton)
        
        updateConstraints()
        
        configureCameraController()
    }
    
    func configureCameraController() {
        cameraController.prepare {(error) in
            if let error = error {
                print(error)
            }
            
            try? self.cameraController.displayPreview(on: self.capturePreviewView)
        }
    }
    
    func toggleFlash(_ sender: UIButton) {
        if cameraController.flashMode == .on {
            cameraController.flashMode = .off
            toggleFlashButton.setImage(#imageLiteral(resourceName: "ic_flash_off"), for: .normal)
        } else {
            cameraController.flashMode = .on
            toggleFlashButton.setImage(#imageLiteral(resourceName: "ic_flash_on"), for: .normal)
        }
    }
    
    func switchCameras(_ sender: UIButton) {
        do {
            try cameraController.switchCameras()
        } catch {
            print(error)
        }
        
        switch cameraController.currentCameraPosition {
        case .some(.front):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "ic_switch_camera"), for: .normal)
            
        case .some(.rear):
            toggleCameraButton.setImage(#imageLiteral(resourceName: "ic_switch_camera"), for: .normal)
            
        case .none:
            return
        }
    }
    
    func captureImage(_ sender: UIButton) {
        cameraController.captureImage {(image, error) in
            guard let image = image else {
                print(error ?? "Image capture error")
                return
            }
            
            try? PHPhotoLibrary.shared().performChangesAndWait {
                PHAssetChangeRequest.creationRequestForAsset(from: image)
            }
        }
    }
}
